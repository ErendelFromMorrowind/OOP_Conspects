      Операторы цикла
  for, while, do-while, foreach

for(инициализация;условие продолжения;изменение счётчика\параметра)
{
  тело цикла
}

for(int i = 1;1<101;i+=1)
{
  Console.Write(){$"{i*i:D}"});
}

Первый запуск цикла, порядок выполнения:
1 — 2 — тело;
Второй и далее запуски цикла, порядок выполнения:
3 — 2 — тело;

  while
while(условие)
{
оператор-тело;
}

while (x>b)
{
  x += h;
  sum += x*x*h;
}

  do-while
do
{
  оператор-тело;
}
while(условие);

Тело выполняется хотя бы один раз, а потом проверяется условие;

  Вложенные циклы

int i,j;
for(i=1;1<=10;i+=1)
{
  for(j=1;j<=10;j+=1)
  Console,WriteLine("i всё ещё {0}, a j уже давно {1}",i,j);
  Console.WriteLine("\n");
}

  Операторы выхода из цикла
Оператор break — оператор прерывания;

Его используют в случае:
  1. Окончание case в операторе switch;
  3. Немедленное окончание цикла, не связанного с проверкой обычного условия окончания цикла. При выполнении оператора произойдёт немедленный выход из цикла и переход к выполнению слудующего за циклом оператра;

Оператор continue — оператор продолжения;
Исопльзуется в случае, если нужно закончить текущую итерацию цикла и не выполнять оставшивеся операторы, а сразу перейти к следующей итерации цикла;
В этом случае прерывается только одна итерация и переводится управление к вычислению следующей итерации. При выходе из цикла значения счётчика сохраняются;
//итерация — один проход цикла;

Опертаор безусловоного выхода g*to
for()
{
  while()
  {
    for()
    {
      if() goto exit;
    }
  }
}
exit:
  Console.Write("Быстрый выход их вложенный циклов");


    Отладка
F11/F10 — активацяия отладки, построчного выполнения. Для перехода на следующую строчку надо ещё раз нажать на кнопку;

Используются два основных окна: "Видимые" и "Локальные";
В них отмечаются значения всех переменных.
