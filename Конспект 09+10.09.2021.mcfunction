                    Объявление переменных
Объявление переменных — процесс выделения памяти под конкретное имя.
ТИП ИМЯ;
int a;
//задана целочисленная переменная, занимающая 16 бит;
int b = 5;
//инициализация переменной — объявление переменной и задача её значения;
При вводе вещественны числа надо вводить через запятую (3,5), а задаём в программе через точку (3.5)

*Встроенные типы данных C#*

Типы данных:
  Типы значений:
    Целочичленные типы:
      byte;
      sbyte;
      short;
      ushort;
      int;
      uint;
      long;
      ulong;
    Типы с плавающей запятой
      float;
      double;
    Символы:
      char;
    Логический тип:
      bool;
    Десятичный тип:
      decimal;
  Ссылочные типы:
    Объекты:
      object;
    Строки:
      srting;

          Организация ввода-вывода данных
  Ввод данных:
    string s = Console.ReadLine();
    1. Преобразование строки в число с помощью метода Parse(), который реализован для всех числовых типов данных:
        int x = int.(Parse(s))
      Или сокращённый вариант:
        int x int.Parse(Console.ReadLine());
    2. Пpеобразование строки в число с помощью класса System.Concert:
        int y = Convert.Toint(s);
  Вывод данных:
    1. Console.WriteLine(x);
      //на экране выводится значение переменной x
      //лучше не надо так делать, а то побьют;
    2. Console.WriteLine("x=" + x + "y=" + y);
    3. Console.WriteLine("x равно {0} y равно {1}",x, y);
      //выводится строка, формат которой задан первым аргументом метода, при это вместо параметра {0} выводится значение х, а вместо {1} — значение у, то есть значения первой и второй переменной соответственно.
    4. Console.WriteLine($"x равно {x} y равно {y}");
      //вывод с помощью интерполяции строк;
          Управление форматом числовых данных
Console.WriteLine($"{ИДФ:<формат>m}");
,где:
  ИДФ — имя, выражение или константа, значение которой надо вывести;
  Ф — один из стандартных форматов данных;
  m — количество позиций под дробную часть или количество позиций под дробную часть числа или количество позиций под целое число;
Console.WriteLine($"{25.3798:F2}");   //25.37
  Console.WriteLine($"{25.3798:F0}");   //25
    int a = 25;
  Console.WriteLine($"{a:D5}");   //0025

  Console.Write($"{250000:E}");   //2,500000E+005 (2.5*10^5)

  Console.Write($"{0.7685493821:e2}");    //769e-001

*Таблица констант*

По дефолту целочисленная константа — int;
0 — int const;
0Lu — ulong const;
По дефолту вещественная константа — double;
35.5F — float const;
35.5 — double const;
88 — int;
35.5m — decimal.


double x1 =  3.5; //работает
float x2 = 3.5; //не работает
float x2 = 3.5F; //работает
double x3 = 3.5f; //рабоатет


float x4;
x4 = float.Pars(Console.ReadLine());
