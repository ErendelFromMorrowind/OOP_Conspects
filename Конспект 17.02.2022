                      Свойства класса
Свойства — специальные методы, которые используются не для хранения полей в памяти, а лишь для управления доступом к закрытым полям класса для получения дополнительных характеристик;
Свойства используются
{
  Для организации доступа к полям класса извне;
  Для получения дополнительных характеристик объектов;
}

Методы не требуют параметров, а круглые скобки после них не пишутся;


Методы доступа
{
    Любое свойство должно иметь или get, или set, или оба из них;

    [спецификатор доступа] тип_возвращаемого_знаечения им
    {
      get { //код, возвращающий значение полям
            //не принято менять значение поля
            return имя_поля;
          }

      set { //код, устанавливающий значение полям
            имя_поля = value;
          }
    }

    Тип value определяется типом возвращаемого значения при объявлении функции;
    Название поля принято делать таким же, как название поля, но с большой буквы;

    class InfoPerson
    {
        int age;
        string s;
        public InfoPerson(string Fam)
        {
          age = 0;
          s = Fam;
        }

        public int Age
        {
            get
            {
                return age;
            }
            set
            {
                if(value - age == 1)
                  age = value;
            }
        }

        public string Name
        {
          get
            {
              return s;
            }
        }
    }

    class Program
    {
      statvic void Main()
      {
        string F = Console.ReadLine();
        InfoPerson ui = new InfoPerson(F)
        string myName = ui.Name;
        ui.Age = 1;
        Console.WriteLine("Возраст объекта составляет {0} лет", ui.Age);
      }
    }

    Свойства свойств
    {
      ref и out использовать нельзя;
      Нельзя менять поле в get'e;
      Свойство не подлежит перегрузке;
    }
}

Перегрузка методов
{
  Перегрузка — использование нескольких методов с одинаковым названием, но с разными типами и количествами параметров в пределе одного класса;
  clss Max
  {
    public int max(int a)
    {
      int b = 0;
      //БА;
      return b;
    }

    public int max(int a, int b)
    {
      if(a > b)
        return a;
      else
        return b;
    }

    public int max(int a, int b, int c)
    {
      //БА поиска максимума из трёх;
      return;
    }
  }

  При вызове
  {
    Компьютер сам определяет, какой вариант метода надо использовать. Выбор идёт по вводимым параметрам;
    Неявное преобрезование типов всегда исопльзуется;
    Если преобразование невозможно, выплюнет ошибку;
    Если выьор перегруженного метода возможен более чем олним сопособом, то выбирается "Лучший" из вариантов (меньшее количество и длину преобразований в соответствии с правилами преобразования);
    Если существует несколько варинтов, из которых невозможно выбрать лучший, выдётся сообщение об ошибке;
    Перегрузить метожы, которые отличаются только типами возвращаемых значений, НЕЛЬЗЯ;
    Методы с ref и out можно использовать. Можно использовать с теми же типами;
  }
}
