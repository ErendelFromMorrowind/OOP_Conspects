                Сложные типы данных: Перечисление (перечисляемый тип)
{
  Перечисление(enumeration) — определяемый целочисленный тип, в котором все вохможные значения задаются списком целых констант;
  Объявнелние перечисляемого ТИПА данных:
    В классе:
      enum Meun{ Read, Write, Arrend, Exit };
      enum TwoColors { black, white };
      enum Colors { Red, Blue, Yellow, Magenta, White };
      enum Nums { zero, two = 2, three, four, ten = 10, eleven, fifty = ten + 40 };
  Тело перечисления состоит из имён констант, каждой из которых так или иначе должно быть присвоено целочисленное значение;
  По умолчанию констенты получают последовательные занчения int, начиная с 0, следующее получается ++ом к предыдущей;
  Преимущества:
    1. Облегчают сопровождение кода;
    2. Делают код яснее, позволяя обращаться к целым значениям, называя их осмысленными именами вместо какой-то рандомной дичи;\
    3. Облегчает ввод исходного кода;
  Замечания
    Константы могут быть русскими;
    Имена перечисляемых должны быть уникальными, а значения должны совпадать;
    Можно задавать другой тип констант
      enum Pol byte { man = 1, wonam };


    enum CD { north = 1, south, east, west };
    static void Main()
    {
      CD smth = CD.north;
      Console.WriteLine(smth);  //на экране north. Это не строка;
    }

    Чтобы получить значение этой переменной, нужно явное преобразование типов;
    (int) smth;

    Можно перебрать через for и foreach;
}
